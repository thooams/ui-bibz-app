= title 'Row', url: "layout/grid"
%blockquote UiBibz::Ui::Core::Layouts::Row
%p.bd-callout
  Grid systems are used for creating page layouts through a series of rows that house your content.
  You can read about the doc :
  = getbootstrap_doc("layout/grid/")

= code do
  :plain
    # by variable
    ui_row content, options, html_options

    # or by block
    ui_row options, html_options do
      content
    end

    # or by block tapped
    ui_row options, html_options do |c|
      # by variable
      c.col content, options, html_options
      # or by block
      c.col options, html_options do
        content
      end
    end

= component_options do |co|
  - co.list 'gutters', types: %w(integer hash)
  - co.list "num", types: :integer
  - UiBibzApp::Application::BREAKPOINTS.each do |breakpoint|
    - co.list breakpoint, types: 'hash'
  - co.cache_link
  - co.stimulus_controller_link
  - co.stimulus_action_link
  - co.stimulus_target_link

= component_items do |ci|
  - ci.inherit_component 'col'

- @sections = sections do |s|
  - s.section title: "Row" do
    = example do |c|
      - c.header do
        = ui_row class: 'test' do
          = ui_col "Col 1"
          = ui_col do
            Col 2

        %br
        = ui_row class: 'test' do |row|
          - row.col "Col 1"
          - row.col do
            Col 2
      - c.code do
        :plain
          ui_row class: 'test' do
            ui_col "Col 1"
            ui_col do
              Col 2
            end
          end

          ui_row class: 'test' do |row|
            row.col "Col 1"
            row.col do
              Col 2
            end
          end
      - c.html do
        :plain
          <div class="test row">
            <div class="col">Col 1</div>
            <div class="col">Col 2</div>
          </div>

          <div class="test row">
            <div class="col">Col 1</div>
            <div class="col">Col 2</div>
          </div>

  - s.section title: "Size" do
    %p Cols accept an <code>integer</code> or a <code>hash</code>:
    = component_list_options do |co|
      - co.list "num", types: :integer
      - UiBibzApp::Application::BREAKPOINTS.each do |breakpoint|
        - co.list breakpoint, types: 'hash' do |cl|
          - cl.list "num", types: :integer
    = example do |c|
      - c.header do
        = ui_row 1, class: 'test' do
          = ui_col 'Col 1'
          = ui_col 'Col 2'
          = ui_col 'Col 3'
        %br
        = ui_row md: { num: 2 }, xs: { num: 1}, class: 'test' do
          = ui_col 'Col 1'
          = ui_col 'Col 2'
          = ui_col 'Col 3'
      - c.code do
        :plain
          ui_row 1, class: 'test' do
            ui_col 'Col 1'
            ui_col 'Col 2'
            ui_col 'Col 3'
          end

          ui_row md: { num: 2 }, xs: { num: 1}, class: 'test' do
            ui_col 'Col 1'
            ui_col 'Col 2'
            ui_col 'Col 3'
          end
      - c.html do
        :plain
          <div class="test row row-cols-1">
            <div class="col">Col 1</div>
            <div class="col">Col 2</div>
            <div class="col">Col 3</div>
          </div>

          <div class="test row row-cols-md-2 row-cols-xs-1">
            <div class="col">Col 1</div>
            <div class="col">Col 2</div>
            <div class="col">Col 3</div>
          </div>

          <div class="test row">
            <div class="col">
              <input type="text" name="test" id="test" class="form-control">
            </div>
            <div class="col">
              <input type="text" name="test" id="test" class="form-control">
            </div>
          </div>

  - s.section title: "Gutters" do
    %p Gutters accept an <code>integer</code> or a <code>hash</code>:
    = component_list_options do |co|
      - co.list "num", types: :integer
      - co.list "position", types: :symbol, values: %w(:vertical :horizontal)
      - UiBibzApp::Application::BREAKPOINTS.each do |breakpoint|
        - co.list breakpoint, types: 'hash' do |cl|
          - cl.list "num", types: :integer
          - cl.list "position", types: :symbol, values: %w(:vertical :horizontal)

    = example do |c|
      - c.header do
        = ui_container class: "border" do
          = ui_row gutters: 3, class: "test" do
            = ui_col 'col 1', num: 6
            = ui_col 'col 2', num: 6
            = ui_col 'col 3', num: 6
            = ui_col 'col 4', num: 6
        %br
        = ui_container class: "border" do
          = ui_row gutters: { num: 2 }, class: "test" do
            = ui_col 'col 1', num: 6
            = ui_col 'col 2', num: 6
            = ui_col 'col 3', num: 6
            = ui_col 'col 4', num: 6
        %br
        = ui_container class: "border" do
          = ui_row gutters: { num: 4, position: :horizontal }, class: "test" do
            = ui_col 'col 1', num: 6
            = ui_col 'col 2', num: 6
            = ui_col 'col 3', num: 6
            = ui_col 'col 4', num: 6
        %br
        = ui_container class: "border" do
          = ui_row gutters: {md: { num: 1 }}, class: "test" do
            = ui_col 'col 1', num: 6
            = ui_col 'col 2', num: 6
            = ui_col 'col 3', num: 6
            = ui_col 'col 4', num: 6
        %br
        = ui_container class: "border" do
          = ui_row gutters: {md: { num: 5, position: :vertical }, xs: { num: 3}}, class: "test" do
            = ui_col 'col 1', num: 6
            = ui_col 'col 2', num: 6
            = ui_col 'col 3', num: 6
            = ui_col 'col 4', num: 6
      - c.code do
        :plain
          ui_container class: "border" do
            ui_row gutters: 3, class: "test" do
              ui_col 'col 1', num: 6
              ui_col 'col 2', num: 6
              ui_col 'col 3', num: 6
              ui_col 'col 4', num: 6
            end
          end

          ui_container class: "border" do
            ui_row gutters: { num: 2 }, class: "test" do
              ui_col 'col 1', num: 6
              ui_col 'col 2', num: 6
              ui_col 'col 3', num: 6
              ui_col 'col 4', num: 6
            end
          end

          ui_container class: "border" do
            ui_row gutters: { num: 4, position: :horizontal }, class: "test" do
              ui_col 'col 1', num: 6
              ui_col 'col 2', num: 6
              ui_col 'col 3', num: 6
              ui_col 'col 4', num: 6
            end
          end

          ui_container class: "border" do
            ui_row gutters: {md: { num: 1 }}, class: "test" do
              ui_col 'col 1', num: 6
              ui_col 'col 2', num: 6
              ui_col 'col 3', num: 6
              ui_col 'col 4', num: 6
            end
          end

          ui_container class: "border" do
            ui_row gutters: {md: { num: 5, position: :vertical }, xs: { num: 3}}, class: "test" do
              ui_col 'col 1', num: 6
              ui_col 'col 2', num: 6
              ui_col 'col 3', num: 6
              ui_col 'col 4', num: 6
            end
          end
      - c.html do
        :plain
          <div class="border container">
            <div class="test row g-3">
              <div class="col-6">col 1</div>
              <div class="col-6">col 2</div>
              <div class="col-6">col 3</div>
              <div class="col-6">col 4</div>
            </div>
          </div>

          <div class="border container">
            <div class="test row g-2">
              <div class="col-6">col 1</div>
              <div class="col-6">col 2</div>
              <div class="col-6">col 3</div>
              <div class="col-6">col 4</div>
            </div>
          </div>

          <div class="border container">
            <div class="test row gx-4">
              <div class="col-6">col 1</div>
              <div class="col-6">col 2</div>
              <div class="col-6">col 3</div>
              <div class="col-6">col 4</div>
            </div>
          </div>

          <div class="border container">
            <div class="test row g-md-1">
              <div class="col-6">col 1</div>
              <div class="col-6">col 2</div>
              <div class="col-6">col 3</div>
              <div class="col-6">col 4</div>
            </div>
          </div>

          <div class="border container">
            <div class="test row gy-md-5 g-xs-3">
              <div class="col-6">col 1</div>
              <div class="col-6">col 2</div>
              <div class="col-6">col 3</div>
              <div class="col-6">col 4</div>
            </div>
          </div>

= @sections.render
