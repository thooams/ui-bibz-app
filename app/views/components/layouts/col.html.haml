= title 'Col', url: "layout/grid"
%blockquote UiBibz::Ui::Core::Layouts::Col
%p.bd-callout
  Grid systems are used for creating a series of columns that house your content.
  You can read about the doc :
  = getbootstrap_doc("layout/grid/")

= code 'col'

= component_options do |co|
  - co.list 'num', types: 'integer'
  - co.list 'offset', types: 'integer'
  - co.list 'pull', types: 'integer'
  - co.list 'push', types: 'integer'
  - co.list 'order', types: 'integer'
  - UiBibzApp::Application::BREAKPOINTS.each do |breakpoint|
    - co.list breakpoint, types: ["integer", "hash"]
  - co.cache_link
  - co.stimulus_controller_link
  - co.stimulus_action_link
  - co.stimulus_target_link

- @sections = sections do |s|
  - s.section title: "Col" do
    = example do |c|
      - c.header do
        = ui_row class: "test" do
          = ui_col do
            Col 1
          = ui_col "Col 2"
      - c.code do
        :plain
          ui_row class: "test" do
            ui_col do
              Col 1
            end
            ui_col "Col 2"
          end
      - c.html do
        :plain
          <div class="test row">
            <div class="col">Col 1</div>
            <div class="col">Col 2</div>
          </div>

  - s.section title: "Options" do
    :markdown
      A column can take several arguments [<code>Hash</code>/<code>Integer</code>]:

      * num - Integer/Symbol (1..12 || :auto)
      * offset - Integer (1..12)
      * pull - Integer (1..12)
      * push - Integer  (1..12)

    = example do |c|
      - c.header do
        = ui_row class: 'test' do
          = ui_col 3 do
            Col 1
          = ui_col({ num: 10, offset: 2 }, { class: 'test-col' }) do
            Col 2
          = ui_col 'Col 3', { num: 2, pull: 4 }, { class: 'test-col2' }
          = ui_col md: 4 do
            Col 4
      - c.code do
        :plain
          ui_row class: "test" do
            ui_col 3 do
              Col 1
            end
            ui_col({ num: 10, offset: 2 }, { class: "test-col" }) do
              Col 2
            end
            ui_col "Col 3", { num: 2, pull: 4 }, { class: "test-col2" }
            ui_col md: 4 do
              Col 4
            end
          end
      - c.html do
        :plain
          <div class="test row">
            <div class="col-3">Col 1</div>
            <div class="test-col col-10 offset-2">Col 2</div>
            <div class="test-col2 col-2 col-pull-4">Col 3</div>
            <div class="col-md-4">Col 4</div>
          </div>

  - s.section title: "Col with differents sizes" do
    :markdown
      To add multiple sizes of columns, you must use arguments :

    = component_list_options do |co|
      - co.list "num", types: :integer
      - UiBibzApp::Application::BREAKPOINTS.each do |breakpoint|
        - co.list breakpoint, types: ['integer', 'hash'] do |cl|
          - cl.list "num", types: :integer, values: "1..12 || :auto"
          - cl.list "offset", types: :integer, values: "1..12"
          - cl.list "pull", types: :integer, values: "1..12"
          - cl.list "push", types: :integer, values: "1..12"

    = example do |c|
      - c.header do
        = ui_row class: 'test' do
          = ui_col(md: { num: 5, offset: 2 }, xs: { num: 2 }) do
            Col 1
          = ui_col 'Col 2', { md: { num: 7, pull: 4 }, xs: { num: 10 }}, { class: 'test-col2' }
      - c.code do
        :plain
          ui_row class: "test" do
            ui_col(md: { num: 5, offset: 2 }, xs: { num: 2 }) do
              Col 1
            end
            ui_col "Col 2", { md: { num: 7, pull: 4 }, xs: { num: 10 }}, { class: "test-col2" }
          end
      - c.html do
        :plain
          <div class="test row">
            <div class="col-md-5 offset-md-2 col-xs-2">Col 1</div>
            <div class="test-col2 col-md-7 col-md-pull-4 col-xs-10">Col 2</div>
          </div>

= @sections.render
