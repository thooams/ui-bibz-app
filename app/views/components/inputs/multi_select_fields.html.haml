:markdown
  # Multi Select Fields

  This component is based on the library [Jquery multiselect](http://loudev.com/).

- @sections = sections do |s|
  - s.section title: "Multi Select Field" do
    = example do |e|
      - e.header do
        = multi_select_field 'example1', option_tags: options_for_select(10.times.map{ |i| "option #{i}" })
      - e.code do
        options = options_for_select(10.times.map{ |i| "option \#{i}" })
        multi_select_field 'example', option_tags: options
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Select Field optgroup clickable" do
    = example do |e|
      - e.header do
        - grouped_options = { 'North America' => [['United States','US'], 'Canada'], 'Europe' => ['Denmark','Germany','France'] }
        = multi_select_field 'example2', { clickable_opt_group: true, option_tags: grouped_options_for_select(grouped_options) }
      - e.code do
        grouped_options = { 'North America' => [['United States','US'], 'Canada'], 'Europe' => ['Denmark','Germany','France'] }
        multi_select_field 'example', { clickable_opt_group: true, option_tags: grouped_options_for_select(grouped_options) }
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Select Field optgroup collapsible" do
    = example do |e|
      - e.header do
        - grouped_options = { 'North America' => [['United States','US'], 'Canada'], 'Europe' => ['Denmark','Germany','France'] }
        = multi_select_field 'example2', { collapsible_opt_group: true, option_tags: grouped_options_for_select(grouped_options) }
      - e.code do
        grouped_options = { 'North America' => [['United States','US'], 'Canada'], 'Europe' => ['Denmark','Germany','France'] }
        multi_select_field 'example', { collapsible_opt_group: true, option_tags: grouped_options_for_select(grouped_options) }
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Select Field searchable" do
    = example do |e|
      - e.header do
        = multi_select_field 'example1', searchable: true, option_tags: options_for_select(10.times.map{ |i| "option #{i}" })
      - e.code do
        options = options_for_select(10.times.map{ |i| "option \#{i}" })
        multi_select_field 'example', searchable: true, option_tags: options
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Select Field select_all_option" do
    = example do |e|
      - e.header do
        = multi_select_field 'example1', select_all_option: true, option_tags: options_for_select(10.times.map{ |i| "option #{i}" })
      - e.code do
        options = options_for_select(10.times.map{ |i| "option \#{i}" })
        multi_select_field 'example', select_all_option: true, option_tags: options
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Select Field state" do
    = example do |e|
      - e.header do
        - %w(primary secondary success warning link).each do |s|
          = multi_select_field s, state: s.to_sym, option_tags: options_for_select(10.times.map{ |i| "option #{i}" })
      - e.code do
        options = options_for_select(10.times.map{ |i| "option \#{i}" })
        multi_select_field 'primary', state: :primary, option_tags: options
        multi_select_field 'secondary', state: :secondary, option_tags: options
        multi_select_field 'success', state: :success, option_tags: options
        multi_select_field 'warning', state: :warning, option_tags: options
        multi_select_field 'link', state: :link, option_tags: options
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Simple form" do
    :markdown
      You can use the multi_select input with gem [simple form](https://github.com/plataformatec/simple_form).

      You must add this line in the file `"config/initializers/simple_form.rb"`

    = example do |e|
      - e.code do
        \...
        config.custom_inputs_namespaces << "CustomInputs"
        \...
    %p Then in your view, you can insert your input multi_select field.
    = example do |e|
      - e.code do
        simple_form(@search) do |f|
          ...
          f.input :company, as: :multi_select, searchable: true
          ...
        end

= @sections.render
