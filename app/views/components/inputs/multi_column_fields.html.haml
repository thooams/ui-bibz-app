:markdown
  # Multi Column Fields
  This component is based on the library [Boostrap-multiselect](http://davidstutz.github.io/bootstrap-multiselect/).

- @sections = sections do |s|
  - s.section title: "Multi Column Field" do
    = example do |e|
      - e.header do
        = multi_column_field 'example1', option_tags: options_for_select(10.times.map{ |i| "option #{i}" })
      - e.code do
        options = options_for_select(10.times.map{ |i| "option \#{i}" })
        multi_column_field 'example', option_tags: options
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Column Field selectable optgroup" do
    = example do |e|
      - e.header do
        - grouped_options = { 'North America' => [['United States','US'], 'Canada'], 'Europe' => ['Denmark','Germany','France'] }
        = multi_column_field 'example2', { option_tags: grouped_options_for_select(grouped_options), selectable_opt_group: true }
      - e.code do
        grouped_options = { 'North America' => [['United States','US'], 'Canada'], 'Europe' => ['Denmark','Germany','France'] }
        multi_column_field 'example', { option_tags: grouped_options_for_select(grouped_options), selectable_opt_group: true }
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Multi Column Field with search" do
    = example do |e|
      - e.header do
        = multi_column_field 'example3', { option_tags: options_for_select(10.times.map{ |i| "option #{i}" }), searchable: true }
      - e.code do
        options = options_for_select(10.times.map{ |i| "option \#{i}" })
        multi_column_field 'example', { option_tags: options, searchable: true }
      - e.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Simple form" do
    :markdown
      You can use the input multi_column with gem [simple form](https://github.com/plataformatec/simple_form).

      You must add this line in the file `"config/initializers/simple_form.rb"`

    = example do |e|
      - e.code do
        \...
        config.custom_inputs_namespaces << "CustomInputs"
        \...

    %p Then in your view, you can insert your input multi_column field.
    = example do |e|
      - e.code do
        simple_form(@search) do |f|
          ...
          f.input :company, as: :multi_column, searchable: true
          ...
        end

= @sections.render
