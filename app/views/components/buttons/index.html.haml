%h1 Buttons
%p= extend_of_component 'button'
%p Use Bootstrap’s custom button styles for actions in forms, dialogs, and more. Includes support for a handful of contextual variations, sizes, statuss, and more.

- @sections = sections do |s|
  - s.section title: "Button" do
    :markdown
      The `status` option for agument the following symbols :

      * :primary
      * :secondary
      * :success
      * :warning
      * :danger
      * :link

    = example do |c|
      - c.header do
        = button 'Primary', status: :primary
        = button 'Secondary', status: :secondary
        = button 'Success', status: :success
        = button 'Warning', status: :warning
        = button 'Danger', status: :danger
        = button 'Link', status: :link
      - c.code do
        button 'Primary', status: :primary
        button 'Secondary', status: :secondary
        button 'Success', status: :success
        button 'Warning', status: :warning
        button 'Danger', status: :danger
        button 'Link', status: :link
      - c.html do
        <button class="btn-primary btn">Primary</button>
        <button class="btn-secondary btn">Secondary</button>
        <button class="btn-success btn">Success</button>
        <button class="btn-warning btn">Warning</button>
        <button class="btn-danger btn">Danger</button>
        <button class="btn-link btn">Link</button>
      - c.footer do
        = documentation_link 'Documentation', '#'

  :markdown
    ##Button options

  - s.section title: "Outline", tag: :h3 do
    :markdown
      The background color of the buttons can be removed through the `outline` option that has for a Boolean argument.
    = example do |c|
      - c.header do
        = button 'Primary', status: :primary, outline: true
        = button 'Secondary', status: :secondary, outline: true
        = button 'Success', status: :success, outline: true
        = button 'Warning', status: :warning, outline: true
        = button 'Danger', status: :danger, outline: true
      - c.code do
        button 'Primary', status: :primary, outline: true
        button 'Secondary', status: :secondary, outline: true
        button 'Success', status: :success, outline: true
        button 'Warning', status: :warning, outline: true
        button 'Danger', status: :danger, outline: true
      - c.html do
        <button class="btn-primary-outline btn">Primary</button>
        <button class="btn-secondary-outline btn">Secondary</button>
        <button class="btn-success-outline btn">Success</button>
        <button class="btn-warning-outline btn">Warning</button>
        <button class="btn-danger-outline btn">Danger</button>
      - c.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Size", tag: :h3 do
    :markdown
      The size can be be defined through the `size` option that has the following two arguments :

      * :lg
      * :sm
      * :xs

    = example do |c|
      - c.header do
        = button 'Large button', status: :primary, size: :lg
        = button 'Medium button', status: :primary
        = button 'Small button', status: :primary, size: :sm
        = button 'Extra small button', status: :primary, size: :xs
      - c.code do
        button 'Large button', status: :primary, size: :lg
        button 'Medium button', status: :primary
        button 'Small button', status: :primary, size: :sm
        button 'Extra small button', status: :primary, size: :xs
      - c.html do
        <button class="btn-primary btn btn-lg">Large button</button>
        <button class="btn-primary btn">Medium button</button>
        <button class="btn-primary btn btn-sm">Small button</button>
        <button class="btn-primary btn btn-xs">Extra small button</button>
      - c.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Type", tag: :h3 do
    :markdown
      Buttons can be presented as a block through the `type` option that argument for the symbol `:block`.
    = example do |c|
      - c.header do
        = button 'Block level button', status: :primary, type: :block
        = button 'Block level button', status: :secondary, type: :block
      - c.code do
        button 'Block level button', status: :primary, type: :block
        button 'Block level button', status: :secondary, type: :block
      - c.html do
        <button class="btn-primary btn btn-block">Block level button</button>
        <button class="btn-secondary btn btn-block">Block level button</button>
      - c.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "state", tag: :h3 do
    :markdown
      The buttons inherits the `state` option, this option is in element [component] (../components/)
      This option lets you disable or enable the element about through these two arguments :

      * :active
      * :disabled

    = example do |c|
      - c.header do
        = button 'Primary', status: :primary, state: :active
        = button 'Primary', status: :primary, state: :disabled
      - c.code do
        button 'Primary', status: :primary, state: :active
        button 'Primary', status: :primary, state: :disabled
      - c.html do
        <button class="active btn-primary btn">Primary</button>
        <button class="disabled btn-primary btn">Primary</button>
      - c.footer do
        = documentation_link 'Documentation', '#'

  - s.section title: "Options and html options" do
    :markdown
      Like the [component] (../ components/), the `bouton` element can be written in two ways :

      * in line
      * in block

    = example do |c|
      - c.header do
        = button 'Success', { status: :success }, { class: 'button' }
        = button({ status: :info }, { class: 'button' }) do
          = 'Info'
      - c.code do
        button 'Primary', { status: :success }, { class: 'button' }
         
        button({ status: :success }, { class: 'button' }) do
          Info
        end
      - c.html do
        <button class="button btn-success btn">Success</button>
        <button class="button btn-info btn">Info</button>
      - c.footer do
        = documentation_link 'Documentation', '#'

= @sections.render
